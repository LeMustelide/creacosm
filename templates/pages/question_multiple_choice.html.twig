{% extends 'base.html.twig' %}
{% block title %}Question multiple choice
{% endblock %}
{% block body %}
	<section class="viewh2">

		<div class="main-question">
			<div class="header-question">
				<img src="/assets/img/logo.png" alt="Logo Créasosm" class="logo3">
				<p class="p1">Temps de réponse : 30min</p>
			</div>
			<div class="container-question">
				<div class="question">
					<p>{{ questionId + 1 }}. {{question.entitled}}</p>
                    <form method="POST" action="{{ path('app_poll_respond', {id: poll.id, questionId: questionId + 1, token: token}) }}">
                        <div class="card-checkbox">
                            {% for answer in question.answers %}
                                <div class="reponse-question-multiple">
                                    <div class="checkbox-wrapper-4">
                                        <input class="inp-cbx" id="repq{{ answer.id }}" type="checkbox" name="checkbox{{ answer.id }}"/>
                                        <label class="cbx" for="repq{{ answer.id }}">
                                            <span>
                                                <svg width="12px" height="10px">
                                                    <use xlink:href="#check-4"></use>
                                                </svg>
                                            </span>
                                            <span>{{ answer.entitled }}</span>
                                        </label>
                                        <svg class="inline-svg">
                                            <symbol id="check-4" viewbox="0 0 12 10">
                                                <polyline points="1.5 6 4.5 9 10.5 1"></polyline>
                                            </symbol>
                                        </svg>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>

                        <button class="btn-question-ok" type="submit">OK</button>
                        {% if questionId > 0 %}
                        <a class="btn-question-precedent" href="{{ path('app_poll_respond', {id: poll.id, questionId: questionId - 1, token: token}) }}">
                            <span class="material-symbols-outlined">keyboard_backspace</span>
                            Précédent
                        </a>
                        {% endif %}
                    </form>
				</div>
			</div>
		</div>
		<div class="container-pannel-question">

			<p class="text-sondage">{{ poll.name }}</p>

			<div class="circle-wrap shadow">
				<div class="circle">
					<div class="mask full">
						<div class="fill"></div>
					</div>
					<div class="mask half">
						<div class="fill"></div>
					</div>
					<div class="inside-circle">
						<p>{{ percentage|round(0, 'floor') }}%</p>
						<p class="text-circle-wrap">{{ advancement }}/{{ length }}
						</p>
					</div>
				</div>

			</div>

		</div>

	</section>


{% endblock %}

{% block javascripts %}
    <script>
        function updateProgressRotation(percentage) {
            const degree = (percentage * 180) / 100;
            const masks = document.querySelectorAll('.mask.full, .circle .fill');

            masks.forEach(mask => {
                // Supprimer l'animation précédente
                mask.style.animation = 'none';
                // Forcer un reflow pour que le navigateur prenne en compte la suppression de l'animation
                void mask.offsetWidth;
                // Appliquer l'animation fill avec la nouvelle rotation
                mask.style.animation = `fill ease-in-out 3s forwards`;

                const animation = mask.animate([
                    { transform: 'rotate(0deg)' },
                    { transform: `rotate(${degree}deg)` }
                ], {
                    duration: 3000,
                    easing: 'ease-in-out',
                    fill: 'forwards'
                });
            });
        }

        document.addEventListener('DOMContentLoaded', () => {
            const percentage = {{ percentage }};
            updateProgressRotation(percentage);
        });
    </script>
{% endblock %}
